from standard import (array_in_string, copy_object)

# need the object to move, action.
# animation is basically stop-motion animation.
# so it is a list of times and frames.
# the changes can be
# it's position and orientation is determined by other things.
() animate(object animation, object things, object geometries, number now):
    elapsed_time = now - animation.time_start
    if animation.loop:
        elapsed_time = elapsed_time % animation.duration
    #print(["in animate", elapsed_time])
    action = null
    for frame in animation.actions:
        if elapsed_time > frame.time:
            action = frame

    if action == null:
        return

    thing = animation.thing

    # run the animation.
    if array_in_string(keys(action), "geometry_name"):
        #print(["in animate action ", action.geometry_name])
        geometry = geometries{action.geometry_name}
        thing.geometry = geometry
    elif array_in_string(keys(action), "children_names"):
        new_children = []
        action_children = action.children_names
        for name in action_children:
            new_child = things{name}
            append(new_children, new_child)
        thing.children = new_children
    else:
        for key in keys(action):
            if key == "time":
                continue
            thing{key} = action{key}

(object active) animation_task(object animation, object thing, number now):
    active = copy_object(animation)
    active.time_start = now
    active.thing = thing
